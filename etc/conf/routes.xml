<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans.xsd
           http://camel.apache.org/schema/spring 
http://camel.apache.org/schema/spring/camel-spring.xsd" >



	<!-- Needed to enable support vor environment variables -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"/>

	<camel:sslContextParameters id="mySSLContextParameters">           
       <camel:trustManagers>
			<camel:keyStore password="{{env:DATA_APP_SSL_CERT_PWD}}" resource="{{env:DATA_APP_SSL_CERT_FILE}}" />
        </camel:trustManagers>
        <camel:serverParameters clientAuthentication="NONE" />
	</camel:sslContextParameters>
	
	<camelContext xmlns="http://camel.apache.org/schema/spring">
	    <restConfiguration bindingMode="auto" component="restlet" port="9091" />

		<rest path="/say">
			<get uri="/hello">
				<to uri="direct:hello"/>
			</get>
			<get uri="/start">
				<to uri="direct:start"/>
			</get>
		</rest>
        <route id="receiveMessageRoute">
            <from uri="activemq:queue:incoming" />
                <setHeader headerName="CamelHttpMethod">
                <constant>POST</constant> </setHeader>
            <to uri="http://execution_core_container_bl:8081/incoming-data-channel/message"/>
        </route>
		<!--
		<route id="sendStringMessageRoute">
            <from uri="activemq:queue:outcoming" />
                <setHeader headerName="CamelHttpMethod">
                <constant>POST</constant> </setHeader>
			<to uri="https4://{{env:DATA_APP_ENDPOINT}}?sslContextParametersRef=mySSLContextParameters"/>
        </route>-->
		<route id="sendMultipartMessageRoute">
			<from uri="activemq:queue:outcoming"/>
			<setHeader headerName="Content-Type"><simple>multipart/mixed; boundary=${body.replaceAll("[^']*(?:--(.*?)--)","$1").trim()}</simple></setHeader>
			<setHeader headerName="Forward-To">
				<constant>fake_endpoint</constant>
			</setHeader>
			<setHeader headerName="CamelHttpMethod">
				<constant>POST</constant>
			</setHeader>
			<setBody>
				<simple>
					${body.replaceAll(--${body.replaceAll("[^']*(?:--(.*?)--)","$1")}, \\r\\n--${body.replaceAll("[^']*(?:--(.*?)--)","$1")})}
				</simple>
			</setBody>
			<transform>
				<simple>
					${body.replaceAll("[\n]","\r\n")}
				</simple> 
			</transform> 
			<log message="Sending...\n${body}"/>
			<to uri="https4://{{env:DATA_APP_ENDPOINT}}?sslContextParametersRef=mySSLContextParameters"/>	
		</route>
		<route>
			<from uri="direct:hello"/>
			<log message="Got ${body}"/>	
		</route>	
    </camelContext>
    <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="connectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL" value="tcp://0.0.0.0:61816"/>
            </bean>
        </property>
    </bean>
</beans>
